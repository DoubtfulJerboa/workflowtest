name: Azure Vnet Ochestration
description: Orchestrates and deploys the azure vnet

inputs:
  GITHUB_ENVIRONMENT:
    type: string
    default: ''
  AZURE_RESOURCE_GROUP:
    type: string
    required: true
  AZURE_LOCATION:
    required: true
    type: string
  VNET_NAME:
    type: string
    default: ''



runs:
  using: 'composite'
  steps:
    - name: Default vnet name
      shell: bash
      id: vnetname
      # Sets substitutes and assigns name var to resource group if vnet name is blank
      run: |
        name=$(echo "${{ inputs.VNET_NAME }}")
        name=$(echo ${name:=${{ inputs.AZURE_RESOURCE_GROUP }}-vnet}) 
        echo "vnetname=$name" >> $GITHUB_OUTPUT
        
    - name: VNet heartbeat
      shell: bash
      id: heartbeat
      run: |
        echo '### V-Net Heartbeat' >> $GITHUB_STEP_SUMMARY
        # Check if a vnet exists already with the name
        query=$(az network vnet list --resource-group ${{ inputs.AZURE_RESOURCE_GROUP }} --query "[?name == '${{ steps.vnetname.outputs.vnetname }}']")
        len=$(echo "$query" | jq 'length')
        if [ "$len" -eq 0 ]; then
          echo "vnet=missing" >> $GITHUB_OUTPUT
          echo 'No vnet found' >> $GITHUB_STEP_SUMMARY
        else
          found=$(echo "$query" | jq '.[].name')
          echo -e "Found vnet - $found" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 'Create a virtual network'
      shell: bash
      if: steps.heartbeat.outputs.vnet == 'missing'
      run: |
        # Create the VNET
        # az network vnet create \
        #   --name '${{ steps.vnetname.outputs.vnetname }}' \
        #   --resource-group '${{ inputs.AZURE_RESOURCE_GROUP }}' \
        #   --location '${{ inputs.AZURE_LOCATION }}'
        
        echo 'Virtual Network ${{ steps.vnetname.outputs.vnetname }} | Created' >> $GITHUB_STEP_SUMMARY 
            
